buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.gradle.publish:plugin-publish-plugin:0.9.7'
    }
}

subprojects {
    apply plugin: 'java-gradle-plugin'
    apply plugin: 'groovy'
    apply plugin: 'com.gradle.plugin-publish'

    group 'org.m2ci.msp'
    version '0.2-SNAPSHOT'

    gradlePlugin {
        plugins {
            praatWrapperPlugin {
                id = pluginId
                implementationClass = pluginImplementationClass
            }
        }
    }

    repositories {
        jcenter()
        def praatVersionNoDots = praatVersion.replaceAll(~/\./, '')
        ivy {
            url 'http://www.fon.hum.uva.nl/praat/old/'
            layout 'pattern', {
                artifact "$praatVersionNoDots/[module]${praatVersionNoDots}_[classifier].[ext]"
            }
        }
    }

    configurations {
        praat
    }

    dependencies {
        compile localGroovy()
        testCompile group: 'org.testng', name: 'testng', version: '6.9.10'
        praat group: 'org.praat', name: praatName, version: praatVersion, classifier: praatClassifier, ext: praatExtension
    }

    sourceSets {
        main {
            groovy {
                srcDirs "$rootDir/src/main/groovy"
            }
        }
        test {
            groovy {
                srcDirs "$rootDir/src/test/groovy"
            }
        }
    }

    task copyPraatDependency(type: Copy) {
        from configurations.praat
        into temporaryDir
        processResources.dependsOn it
    }

    test {
        useTestNG()
        testLogging {
            showStandardStreams = true
        }
    }

    pluginBundle {
        website = 'https://github.com/m2ci-msp/gradle-praat-wrapper-plugin'
        description = 'Praat provider for Gradle'
        tags = ['phonetics', 'speech science']

        plugins {
            praatWrapperPlugin {
                id = pluginId
                displayName = pluginDisplayName
            }
        }
    }
}
